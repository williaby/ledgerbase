# name = pyproject.toml
# description = Project configuration file for Poetry, linting, formatting, and build settings
# category = dev
# usage = Used by Poetry, Black, Ruff, and other tools for project configuration
# behavior = Defines project metadata, dependencies, and tool configurations
# inputs = none
# outputs = none
# dependencies = Poetry, Black, Ruff, MyPy, semantic-release
# author = LedgerBase Team
# last_modified = 2023-11-15
# changelog = Initial version

[tool.poetry]
name = "ledgerbase"
version = "0.1.0"
description = "A financial ledger and budgeting application."
authors = ["Byron Williams"]
license = "MIT"
readme = "README.md"
packages = [{ include = "ledgerbase", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
Flask = "3.0.3"
Flask-SQLAlchemy = "3.1.1"
cryptography = "44.0.1"
python-dotenv = "1.0.1"
sentry-sdk = { extras = ["flask"], version = "2.25.1" }
marshmallow = "3.21.2"
Flask-Limiter = "3.5.0"
gunicorn = "^23.0.0"
psycopg = { version = "3.1.18", extras = ["binary"] }
python-dateutil = "2.9.0.post0"
plaid-python = "^15.3.0"
PyYAML = "6.0.1"
jinja2 = "^3.1.6"
nox = "^2025.2.9"

[tool.poetry.group.dev.dependencies]
pytest = "8.2.0"
pre-commit = "3.7.0"
black = "24.4.2"
mypy = "^1.9.0"
bandit = "^1.7.8"
types-requests = "^2.31.0.10"
pathspec = "^0.12.1"
pydantic = "^2.11.3"
sphinx = "^7.2.6"  # compatible with sphinx-rtd-theme 1.3.0
ruff = "^0.11.5"
python-semantic-release = "^7.16.0"
pytest-cov = "^4.1.0"
sphinx-rtd-theme = "^1.3.0"
sphinxcontrib-plantuml = "^0.25"
readthedocs-sphinx-search = "^0.1"
sphinxcontrib-spelling = "^7.2"
sphinx-lint = "^0.8"
codespell = "^2.1"

[tool.black]
line-length = 88
target-version = ["py311"]
skip-string-normalization = false

[tool.ruff]
# core formatter settings—no linter config here any more
target-version = "py311"
line-length    = 88
fix            = true
show-fixes     = true

[tool.ruff.format]
quote-style         = "double"
line-ending         = "auto"
docstring-code-format = true
indent-style        = "space"

[tool.ruff.lint]
# which error codes to check
select = ["ALL"]

# codes to suppress everywhere
ignore = [
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D107",   # Missing docstring in __init__
  "T201",   # print() used
  "D203",   # 1 blank line required before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "D205",   # Docstring under triple quotes should be on the same line
  "E265",   # Block comment should start with `# ` — suppressed due to metadata header usage
]

# directories & files to skip entirely
exclude = [
  ".git",
  ".nox",
  ".venv",
  "build",
  "dist",
  "migrations",
  "__pycache__",
  "tests",
]

# file‑specific overrides
[tool.ruff.lint.per-file-ignores]
"annotation_spec.md" = ["E501"]


[tool.ruff.lint.isort]
known-first-party  = ["ledgerbase"]
combine-as-imports = true

[tool.mypy.requests]
ignore_missing_imports = true

[tool.mypy."flask.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_source = "tag"
upload_to_pypi = true
upload_to_git = true
