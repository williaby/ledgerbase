# ==============================================================================
# name: .semgrep.yml
# description: Main Semgrep configuration - References registry rulesets only.
#              Custom rules are defined in 'custom-rules.yml'.
# category: ci
# usage: Used by Nox/pre-commit. Run with: semgrep --config .semgrep.yml --config custom-rules.yml
# behavior: Applies selected Semgrep registry rulesets (using 'p/' prefix).
#           Intended to complement Ruff linting (esp. S rules).
# last_modified: 2025-04-22
# ==============================================================================

# ------------------------------------------------------------------------------
# Section 1: Curated Registry Rulesets (Using 'p/' prefix)
# ------------------------------------------------------------------------------
# Leverages Semgrep-maintained rulesets identified in the original vetted config.
# Redundant rulesets (like p/python.bandit) are commented out assuming
# coverage from other tools like Ruff (S rules).
include:
  # üêç Python & Flask Security / Quality
  - p/python.flask         # Flask specific security and best practices
  # - p/python.bandit      # COMMENTED OUT: Assuming Ruff S rules provide sufficient Bandit coverage
  - p/python.cwe-top-25    # Rules mapping to MITRE CWE Top 25
  - p/python.security-audit # General Python security checks
  - p/python.secure-defaults # Checks for insecure default settings
  - p/r2c-best-practices   # General Python best practices from r2c (now Semgrep)

  # üîê General Web Security Concepts
  - p/owasp-top-ten      # Rules mapping to OWASP Top 10 vulnerabilities
  - p/injection          # Focus on various injection types (SQLi, Command Injection, etc.)
  - p/xss                # Focus on Cross-Site Scripting vulnerabilities

  # üîë Secrets Detection
  # Choose based on evaluation vs. TruffleHog/ggshield. p/secrets is broad.
  - p/secrets            # General secrets detection patterns
  # - p/gitleaks         # Gitleaks patterns (COMMENTED OUT: Potentially redundant w/ p/secrets + other tools)

  # ‚öôÔ∏è Configuration Safety
  - p/semgrep-misconfigurations # Checks for common misconfigurations

  # üêö Shell script safety (if you check shell scripts)
  - p/bash.shellcheck    # Integrates ShellCheck findings

  # üèóÔ∏è CI/CD & Semgrep Meta (Useful for rule development/maintenance)
  - p/github-actions     # Security checks for GitHub Actions workflows
  - p/semgrep-rule-ci    # Best practices for Semgrep rules themselves
  - p/semgrep-rule-lints # Linting for Semgrep rules

# IMPORTANT: Custom rules are now in 'custom-rules.yml'
# Run Semgrep with both configs: semgrep --config .semgrep.yml --config custom-rules.yml
