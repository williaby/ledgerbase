default_stages: [ commit ]
exclude: |
  ^(
    \.venv/
    | \.idea/
    | \.nox/
    | \.pytest_cache/
    | dist/
    | build/
    | .*\.egg-info/
    | .*\.pyc
    | __pycache__/
    | notebooks/.ipynb_checkpoints/
    | migrations/
    | static/
  )/

repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort

  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8
          - flake8-bandit

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        additional_dependencies:
          - Flask
          - types-Flask
          - pydantic

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: debug-statements
      - id: fix-byte-order-marker
      - id: name-tests-test
      - id: requirements-txt-fixer

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.14.0
    hooks:
      - id: reorder-python-imports

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa-black
      - id: nbqa-isort

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        name: markdownlint
        entry: markdownlint
        language: system
        types: [ markdown ]
        additional_dependencies: [ ]

  - repo: local
    hooks:
      - id: validate-env-prod-sops
        name: Validate Required Keys in .env.prod.sops.yaml
        entry: ./validate_env_keys.sh
        language: system
        files: ^\.env\.prod\.sops\.yaml$

      - id: forbid-new-env-prod
        name: forbid-env-prod-commits
        entry: bash -c 'grep -q "SNYK_TOKEN" $1 && echo "‚ùå Committing .env.prod with secrets is forbidden." && exit 1 || exit 0'
        language: system
        types: [file]
        files: ^\.env\.prod$

      - id: generate-script-docs
        name: Generate script documentation
        entry: python scripts/generate_script_docs.py
        language: system
        pass_filenames: false

      - id: check-script-docs-freshness
        name: Check scripts.md is up to date
        entry: bash -c 'git diff --exit-code docs/scripts.md || (echo "docs/scripts.md is out of date. Run generate_script_docs.py." && exit 1)'
        language: system
        pass_filenames: false
