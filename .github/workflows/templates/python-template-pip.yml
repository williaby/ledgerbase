# name = python-template-pip.yml
# description = Reusable GitHub Actions workflow to set up Python via pip and run a specified command securely
# category = security
# usage = invoke via `uses: ./.github/workflows/python-template-pip.yml` with inputs `python-version` and `run-command`
# behavior = Installs Python, upgrades pip, installs dependencies if present, and runs a user-specified command
# inputs = python-version (string), run-command (string)
# outputs = stdout and stderr logs, exit code of the provided command
# dependencies = step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf, actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683, actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236, pip
# author = Byron Williams
# last_modified = 2025-04-19
# tags = ci, python, automation
# changelog = Replaced direct interpolation of run-command with environment variable and added metadata header

name: Python Task (via Poetry)

on:
  workflow_call:
    inputs:
      run-command:
        required: true
        type: string

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare Poetry & Assured OSS
    uses: ./.github/workflows/templates/prepare-poetry.yml
    with:
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
    secrets:
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}

  task:
    name: Run Provided Command
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify no public PyPI fallback
        run: poetry run nox -s verify_assured

      - name: Execute command
        env:
          RUN_COMMAND: ${{ inputs.run-command }}
        run: |
          echo "â–¶ $RUN_COMMAND"
          poetry run $RUN_COMMAND
