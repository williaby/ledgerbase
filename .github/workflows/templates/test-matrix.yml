name: Test Matrix

on:
    workflow_call:
        inputs:
            session:
                required: true
                type: string
            python-version:
                required: false
                type: string
                default: "3.11"

permissions:
    contents: read

jobs:
    setup:
        if: inputs.python-version == '3.11'
        runs-on: ubuntu-22.04
        outputs:
            python-version: ${{ steps.extract.outputs.versions }}
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Install jq
              run: sudo apt-get update && sudo apt-get install -y jq

            - name: Load Python versions from python-versions.json
              id: extract
              run: |
                  versions=$(jq -c .python_versions .github/workflows/templates/python-versions.json)
                  echo "versions=$versions" >> $GITHUB_OUTPUT

    run-default:
        if: inputs.python-version == '3.11'
        needs: setup
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                session: ["tests"]
                python-version: ${{ fromJson(needs.setup.outputs.python-version) }}
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Nox and run session
              run: |
                  python -m pip install --upgrade pip nox
                  nox -s ${{ matrix.session }}

    run-override:
        if: inputs.python-version != '3.11'
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                session: ${{ fromJson(format('["{0}"]', inputs.session)) }}
                python-version: ${{ fromJson(inputs.python-version) }}
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Nox and run session
              run: |
                  python -m pip install --upgrade pip nox
                  nox -s ${{ matrix.session }}

    coverage:
        name: Coverage â†’ Codecov
        needs: test
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11
            - name: Install Nox & run coverage
              run: |
                  python -m pip install --upgrade pip nox
                  nox -s coverage
            - name: Upload to Codecov
              uses: codecov/codecov-action@ad3126e # v5.4.2 SHA :contentReference[oaicite:0]{index=0}
              with:
                  files: coverage.xml
                  flags: tests
                  fail_ci_if_error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
