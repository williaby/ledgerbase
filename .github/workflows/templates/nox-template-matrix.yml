# name = nox-template-matrix.yml
# description = Reusable matrix workflow for running named Nox sessions across multiple Python versions
# category = security
# usage = invoke via `uses: ./.github/workflows/nox-template-matrix.yml` with inputs `session` and optional `python-version`
# behavior = Executes a specified Nox session in parallel across a Python version matrix on a hardened runner
# inputs = session (string), python-version (stringified JSON list of Python versions)
# outputs = Logs for each Nox session and exit codes
# dependencies = step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf, actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608, actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa, actions/cache@5a3ec84eff668545956fd18022155c47e93e2684, jq, actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea, nox
# author = Byron Williams
# last_modified = 2025-04-19
# tags = ci, matrix, security, automation
# changelog = - Stored session name in environment variable for safe interpolation
#             - Wrapped session invocation in quotes to prevent injection

name: Nox Matrix Test

on:
  workflow_call:
    inputs:
      session:
        required: true
        type: string
      python-version:
        required: false
        type: string
        default: "3.11"

jobs:
  nox-matrix:
    name: Run ${{ inputs.session }} on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-version) }}

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Load Python versions from config (if not overridden)
        if: inputs.python-version == '3.11'
        id: load-versions
        run: |
          VERSIONS=$(jq -c .python_versions .github/workflows/templates/python-versions.json)
          echo "matrix=${VERSIONS}" >> $GITHUB_OUTPUT

      - name: Set dynamic matrix if default is used
        if: inputs.python-version == '3.11'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const matrix = process.env.matrix;
            core.setOutput('python-version', matrix);

      - name: Set up Python
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa # v4.8.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry + pip + .nox
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .nox
          key: ${{ runner.os }}-nox-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-nox-${{ matrix.python-version }}-

      - name: Install Nox
        run: python -m pip install --upgrade nox

      - name: Run Nox session
        env:
          SESSION: ${{ inputs.session }}
        run: |
          # Safely invoke the specified Nox session
          nox -s "$SESSION"
