# name = nox-template.yml
# description = Reusable GitHub Actions template for running a single Nox session securely
# category = security
# usage = invoke via `uses: ./.github/workflows/nox-template.yml` with inputs `sessions` and optional `python-version`
# behavior = Executes specified nox sessions in a hardened runner environment with caching
# inputs = sessions (string), python-version (string)
# outputs = Nox session logs and exit codes
# dependencies = step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf, actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608, actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa, actions/cache@5a3ec84eff668545956fd18022155c47e93e2684, nox
# author = Byron Williams
# last_modified = 2025-04-19
# tags = ci, security, automation
# changelog = Updated to store sessions in environment variable for secure interpolation

name: Nox Task

on:
  workflow_call:
    inputs:
      sessions:
        required: true
        type: string
      python-version:
        required: false
        type: string
        default: "3.11"

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare Poetry & Assured OSS
    uses: ./.github/workflows/templates/prepare-poetry.yml
    with:
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
    secrets:
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}

  nox-single:
    name: Run Nox sessions (${{ inputs.sessions }})
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify no public PyPI fallback
        run: poetry run nox -s verify_assured

      - name: Run Nox session(s)
        env:
          SESSIONS: ${{ inputs.sessions }}
        run: |
          for session in $SESSIONS; do
            poetry run nox -s "$session"
          done
