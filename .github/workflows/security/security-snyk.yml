name: Security - Unified Snyk CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write
  security-events: write

env:
  JSON_FILE: snyk-results.json
  SARIF_FILE: snyk-code.sarif
  IAC_SARIF_FILE: snyk-iac.sarif
  PR_FAILURE_LABEL: status:security-failed

jobs:
  snyk-code:
    name: Snyk Code Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk Code scan and output SARIF
        run: snyk code test --sarif > ${{ env.SARIF_FILE }}
      - name: Upload Snyk Code SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.SARIF_FILE }}

  snyk-oss:
    name: Snyk Open Source (SCA) Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Python dependencies
        run: |
          pip install poetry
          poetry install --no-root
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Open Source test (JSON for PR comments)
        run: |
          snyk test \
            --all-projects \
            --detection-depth=3 \
            --json-file-output=${{ env.JSON_FILE }} \
            || echo "Snyk scan completed with issues."
      - name: Upload Snyk JSON results
        uses: actions/upload-artifact@v3
        with:
          name: snyk-results
          path: ${{ env.JSON_FILE }}
      - name: Count vulnerabilities
        id: scan
        run: |
          count=$(grep -c '"id"' "${{ env.JSON_FILE }}" || true)
          echo "vulns=$count" >> "$GITHUB_OUTPUT"
      - name: Comment on PR with Snyk findings
        if: github.event_name == 'pull_request' && steps.scan.outputs.vulns != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let findings = 'No findings were generated.';
            if (fs.existsSync('${{ env.JSON_FILE }}')) {
              findings = fs.readFileSync('${{ env.JSON_FILE }}', 'utf8').trim();
              if (findings.length > 6500) {
                findings = findings.substring(0, 6400) + '\n...\n(Results truncated)';
              }
            }
            const comment = `### ðŸ”’ Snyk Security Audit Report\n\n\u0060\u0060\u0060json\n${findings}\n\u0060\u0060\u0060\nView full logs in the artifact attached above.`;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      - name: Label PR on vulnerability findings
        if: github.event_name == 'pull_request' && steps.scan.outputs.vulns != '0'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['${{ env.PR_FAILURE_LABEL }}']
            });

  snyk-iac:
    name: Snyk IaC Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run IaC scan and output SARIF
        run: snyk iac test --sarif > ${{ env.IAC_SARIF_FILE }} || echo "IaC scan completed with issues."
      - name: Upload IaC SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.IAC_SARIF_FILE }}

  snyk-container:
    name: Snyk Container Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t ledgerbase:latest .
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Monitor container image
        run: snyk container monitor ledgerbase:latest --file=Dockerfile
