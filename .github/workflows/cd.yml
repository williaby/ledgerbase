# name = cd.yml
# description = Continuous Deployment workflow: builds, publishes, and deploys Docker images on version tag :noqa E501
# category = ci
# usage = Trigger on push of semver tags or manual dispatch to build/push image and deploy to target host :noqa E501
# behavior = Checks out code; sets up runner; logs in to GHCR; builds & pushes Docker image; SSHes to deploy host to pull image & restart services :noqa E501
# inputs = triggers: push(tags v*.*.*), workflow_dispatch; secrets: GITHUB_TOKEN, DEPLOY_SSH_PRIVATE_KEY, DEPLOY_HOST, DEPLOY_USER :noqa E501
# outputs = Docker image on ghcr.io/${{ github.repository }}:${{ github.ref_name }}; remote service restarted :noqa E501
# dependencies = step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf, actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683, docker/login-action@d2e1fc138225c3f7bade1bb8740b93b9ef269c67, docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb, docker/build-push-action@94d1a7b1c965ba50a494e7a73d1840a4df4719a5 :noqa E501
# author = Byron Williams
# last_modified = 2025-04-17
# tags = cd, deploy
# changelog = Initial CD workflow draft

name: CD Workflow

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: cd-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build_and_publish:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner (audit outbound)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Login to GitHub Container Registry
        uses: docker/login-action@d2e1fc138225c3f7bade1bb8740b93b9ef269c67
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb

      - name: Build and push image
        uses: docker/build-push-action@94d1a7b1c965ba50a494e7a73d1840a4df4719a5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Remote Host
    runs-on: ubuntu-latest
    needs: build_and_publish
    steps:
      - name: Harden runner (audit outbound)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: audit

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH & deploy
        run: |
          ssh -o StrictHostKeyChecking=no \
              -i ~/.ssh/id_rsa \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            cd /opt/ledgerbase
            docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            docker-compose up -d --remove-orphans
          EOF
