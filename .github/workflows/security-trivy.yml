name: Trivy Docker Image Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * *'

jobs:
  trivy:
    name: Run Trivy vulnerability scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write           # Needed for labeling
      security-events: write         # Needed for SARIF upload

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t ledgerbase:latest .

      - name: Run Trivy with SARIF output
        uses: aquasecurity/trivy-action@v0.11.2
        with:
          image-ref: 'ledgerbase:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'               # Don't block the pipeline, just report
          ignore-unfixed: true

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif

      - name: Auto-label PR if Trivy finds issues
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sarif = JSON.parse(fs.readFileSync('trivy-results.sarif', 'utf8'));
            const results = sarif.runs?.[0]?.results || [];
            if (results.length > 0) {
              const label = "security:trivy";
              const pr = context.payload.pull_request;
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [label],
              });
            }
