name: Security - Trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  trivy:
    name: Run Trivy vulnerability scan
    runs-on: ubuntu-22.04
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@v2.11.1     # v2.11.1
        with:
          egress-policy: audit

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image with commit SHA tag
        run: docker build -t ledgerbase:${{ github.sha }} .

      - name: Run Trivy with SARIF output
        uses: aquasecurity/trivy-action@v2
        with:
          image-ref: ledgerbase:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          exit-code: '0'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Also generate JSON report for review
        uses: aquasecurity/trivy-action@v2
        with:
          image-ref: ledgerbase:${{ github.sha }}
          format: json
          output: trivy-results.json
          ignore-unfixed: true
          severity: HIGH,CRITICAL

      - name: Check if SARIF file was created
        run: |
          if [ ! -f trivy-results.sarif ]; then
            echo "::error::SARIF output not found. Trivy scan may have failed."
            exit 1
          fi

      - name: Check if JSON file was created
        run: |
          if [ ! -f trivy-results.json ]; then
            echo "::error::JSON output not found. Trivy scan may have failed."
            exit 1
          fi

      - name: Count HIGH/CRITICAL issues in SARIF
        id: count
        run: |
          count=$(jq '[.runs[].results[] | select(.level == "error" or .level == "warning")] | length' trivy-results.sarif || echo "0")
          if [ -z "$count" ]; then
           echo "::error::Failed to parse SARIF file. Ensure it is correctly formatted."
            exit 1
          fi
          echo "Total HIGH/CRITICAL issues: $count"
          echo "vulns=$count" >> $GITHUB_OUTPUT

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Upload JSON artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-json
          path: trivy-results.json

      - name: Fail job if high-severity vulnerabilities found
        if: steps.count.outputs.vulns != '0'
        run: |
          echo "::error::Trivy found ${{ steps.count.outputs.vulns }} HIGH or CRITICAL vulnerabilities."
          exit 1

      - name: Label PR if Trivy issues found
        if: github.event_name == 'pull_request' && steps.count.outputs.vulns != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const label = 'security:trivy';
            const pr = context.payload.pull_request;
            if (!pr || !pr.number) {
              console.log("No pull request context or PR number. Skipping label.");
              return;
            }
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [label],
            });

      - name: Cleanup temporary files
        if: always()
        run: |
          rm -f trivy-results.sarif trivy-results.json
