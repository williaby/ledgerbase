name: Security - Trivy

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

permissions:
    contents: read
    security-events: write
    pull-requests: write

jobs:
    trivy:
        name: Run Trivy vulnerability scan (Image, FS, IaC, Secrets)
        runs-on: ubuntu-22.04
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@v2.11.1
              with:
                  egress-policy: audit

            - name: Install dependencies
              run: |
                  sudo apt-get update && sudo apt-get install -y jq curl

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build Docker image with commit SHA tag
              run: docker build -t ledgerbase:${{ github.sha }} .

            - name: Install Trivy CLI
              run: |
                  curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
                  trivy --version

            - name: Run Trivy via Nox
              run: nox -s trivy

            - name: Validate outputs
              run: |
                  test -f docs/reports/sarif/trivy-results.sarif || { echo "SARIF output not found"; exit 1; }
                  test -f docs/reports/json/trivy-results.json || { echo "JSON output not found"; exit 1; }

            - name: Count HIGH/CRITICAL issues in SARIF
              id: count
              run: |
                  count=$(jq '[.runs[].results[] | select(.level == "error" or .level == "warning")] | length' trivy-results.sarif 2>/dev/null || echo "0")
                  echo "Total HIGH/CRITICAL issues: $count"
                  echo "vulns=$count" >> $GITHUB_OUTPUT

            - name: Upload SARIF to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              with:
                  sarif_file: trivy-results.sarif

            - name: Upload JSON artifact (includes enriched metadata)
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: trivy-json
                  path: trivy-results.json

            - name: Upload FS/IaC/Secrets scan results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: trivy-fs-scan
                  path: trivy-fs

            - name: Fail job if high-severity vulnerabilities found
              if: steps.count.outputs.vulns != '0'
              run: |
                  echo "::error::Trivy found ${{ steps.count.outputs.vulns }} HIGH or CRITICAL vulnerabilities."
                  exit 1

            - name: Label PR if Trivy issues found
              if: github.event_name == 'pull_request' && steps.count.outputs.vulns != '0'
              uses: actions/github-script@v7
              with:
                  script: |
                      const label = 'security:trivy';
                      const pr = context.payload.pull_request;
                      if (!pr || !pr.number) {
                        console.log("No pull request context or PR number. Skipping label.");
                        return;
                      }
                      await github.rest.issues.addLabels({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: pr.number,
                        labels: [label],
                      });

            - name: Cleanup temporary files
              if: always()
              run: |
                  rm -f trivy-results.sarif trivy-results.json
                  rm -rf trivy-fs
